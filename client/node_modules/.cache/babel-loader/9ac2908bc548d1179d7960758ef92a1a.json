{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/container/GameContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport GameService from '../services/GameService';\nimport Game from '../components/Game';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GameContainer = () => {\n  _s();\n\n  let [allCards, setAllCards] = useState([]);\n  useEffect(() => {\n    GameService.getCards().then(cards => setAllCards(cards));\n  }, []);\n\n  function shuffleDeck(cards) {\n    let randomDeck = [];\n\n    while (allCards.length !== 0) {\n      let randomIndex = Math.floor(Math.random() * allCards.length);\n      randomDeck.push(allCards[randomIndex]);\n      allCards.splice(randomIndex, 1);\n    }\n\n    allCards = randomDeck;\n    return randomDeck;\n  }\n\n  function shuffleCards(cardArray) {\n    if (cardArray.length !== 0) {\n      let currentIndex = cardArray.length;\n      let temporaryValue;\n      let randomIndex;\n\n      while (0 !== currentIndex) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex = currentIndex - 1;\n        temporaryValue = { ...cardArray[currentIndex]\n        };\n        cardArray[currentIndex] = cardArray[randomIndex];\n        cardArray[randomIndex] = temporaryValue;\n      }\n\n      return cardArray;\n    } else {\n      return;\n    }\n  }\n\n  ; // function firstHand(cards){\n  //     const deck = shuffleDeck(cards);\n  //     const fiveCards = 5;\n  //     const hand = deck.slice(0, fiveCards);\n  //     return hand;\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Game, {\n      allCards: allCards,\n      shuffleDeck: shuffleDeck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GameContainer, \"TWRC8TZE+LLq87FHpZeBvl8w1Sw=\");\n\n_c = GameContainer;\nexport default GameContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameContainer\");","map":{"version":3,"sources":["/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/container/GameContainer.js"],"names":["React","useState","useEffect","GameService","Game","GameContainer","allCards","setAllCards","getCards","then","cards","shuffleDeck","randomDeck","length","randomIndex","Math","floor","random","push","splice","shuffleCards","cardArray","currentIndex","temporaryValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACK,QAAZ,GACCC,IADD,CACMC,KAAK,IAAIH,WAAW,CAACG,KAAD,CAD1B;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASC,WAAT,CAAqBD,KAArB,EAA2B;AACvB,QAAIE,UAAU,GAAG,EAAjB;;AACA,WAAMN,QAAQ,CAACO,MAAT,KAAoB,CAA1B,EAA4B;AACxB,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,QAAQ,CAACO,MAApC,CAAlB;AACAD,MAAAA,UAAU,CAACM,IAAX,CAAgBZ,QAAQ,CAACQ,WAAD,CAAxB;AACAR,MAAAA,QAAQ,CAACa,MAAT,CAAgBL,WAAhB,EAA6B,CAA7B;AACH;;AACDR,IAAAA,QAAQ,GAAGM,UAAX;AACA,WAAOA,UAAP;AACH;;AAED,WAASQ,YAAT,CAAsBC,SAAtB,EAAiC;AAC7B,QAAIA,SAAS,CAACR,MAAV,KAAqB,CAAzB,EAA4B;AACxB,UAAIS,YAAY,GAAGD,SAAS,CAACR,MAA7B;AACA,UAAIU,cAAJ;AACA,UAAIT,WAAJ;;AAEA,aAAO,MAAMQ,YAAb,EAA2B;AAEvBR,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBK,YAA3B,CAAd;AACAA,QAAAA,YAAY,GAAGA,YAAY,GAAG,CAA9B;AAEAC,QAAAA,cAAc,GAAG,EAAE,GAAGF,SAAS,CAACC,YAAD;AAAd,SAAjB;AACAD,QAAAA,SAAS,CAACC,YAAD,CAAT,GAA0BD,SAAS,CAACP,WAAD,CAAnC;AACAO,QAAAA,SAAS,CAACP,WAAD,CAAT,GAAyBS,cAAzB;AACH;;AACD,aAAOF,SAAP;AACH,KAfD,MAeO;AACH;AACH;AACJ;;AAAA,GAvCuB,CAyCxB;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEf,QAAhB;AAA0B,MAAA,WAAW,EAAEK;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtDD;;GAAMN,a;;KAAAA,a;AAwDN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport GameService from '../services/GameService';\nimport Game from '../components/Game';\n\nconst GameContainer = () => {\n\n    let [allCards, setAllCards] = useState([]);\n\n    useEffect(() => {\n        GameService.getCards()\n        .then(cards => setAllCards(cards))\n    }, []);\n\n    function shuffleDeck(cards){\n        let randomDeck = [];\n        while(allCards.length !== 0){\n            let randomIndex = Math.floor(Math.random() * allCards.length);\n            randomDeck.push(allCards[randomIndex]);\n            allCards.splice(randomIndex, 1);\n        }\n        allCards = randomDeck;\n        return randomDeck;\n    }\n\n    function shuffleCards(cardArray) {\n        if (cardArray.length !== 0) {\n            let currentIndex = cardArray.length;\n            let temporaryValue;\n            let randomIndex;\n\n            while (0 !== currentIndex) {\n\n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex = currentIndex - 1;\n\n                temporaryValue = { ...cardArray[currentIndex] };\n                cardArray[currentIndex] = cardArray[randomIndex];\n                cardArray[randomIndex] = temporaryValue;\n            }\n            return cardArray;\n        } else {\n            return\n        }\n    };\n\n    // function firstHand(cards){\n    //     const deck = shuffleDeck(cards);\n    //     const fiveCards = 5;\n    //     const hand = deck.slice(0, fiveCards);\n    //     return hand;\n    // };\n\n    return(\n        <div>\n            <Game allCards={allCards} shuffleDeck={shuffleDeck}/>\n        </div>\n    );\n\n};\n\nexport default GameContainer;"]},"metadata":{},"sourceType":"module"}