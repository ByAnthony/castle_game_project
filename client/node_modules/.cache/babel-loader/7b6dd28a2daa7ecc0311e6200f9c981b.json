{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/InitialDeck.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InitialDeck = ({\n  allCards\n}) => {\n  function shuffleArray(allCards) {\n    let curId = allCards.length;\n\n    while (0 !== curId) {\n      // Pick a remaining element\n      let randId = Math.floor(Math.random() * curId);\n      curId -= 1; // Swap it with the current element.\n\n      let tmp = allCards[curId];\n      allCards[curId] = allCards[randId];\n      allCards[randId] = tmp;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Initial Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), shuffleCards()]\n  }, void 0, true);\n};\n\n_c = InitialDeck;\nexport default InitialDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitialDeck\");","map":{"version":3,"sources":["/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/InitialDeck.js"],"names":["React","useState","InitialDeck","allCards","shuffleArray","curId","length","randId","Math","floor","random","tmp","shuffleCards"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAEhC,WAASC,YAAT,CAAsBD,QAAtB,EAAgC;AAC5B,QAAIE,KAAK,GAAGF,QAAQ,CAACG,MAArB;;AACA,WAAO,MAAMD,KAAb,EAAoB;AAClB;AACA,UAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAA3B,CAAb;AACAA,MAAAA,KAAK,IAAI,CAAT,CAHkB,CAIlB;;AACA,UAAIM,GAAG,GAAGR,QAAQ,CAACE,KAAD,CAAlB;AACAF,MAAAA,QAAQ,CAACE,KAAD,CAAR,GAAkBF,QAAQ,CAACI,MAAD,CAA1B;AACAJ,MAAAA,QAAQ,CAACI,MAAD,CAAR,GAAmBI,GAAnB;AACD;AACJ;;AAED,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECC,YAAY,EAFb;AAAA,kBADJ;AAMH,CArBD;;KAAMV,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst InitialDeck = ({allCards}) => {\n    \n    function shuffleArray(allCards) {\n        let curId = allCards.length;\n        while (0 !== curId) {\n          // Pick a remaining element\n          let randId = Math.floor(Math.random() * curId);\n          curId -= 1;\n          // Swap it with the current element.\n          let tmp = allCards[curId];\n          allCards[curId] = allCards[randId];\n          allCards[randId] = tmp;\n        }\n    }\n\n    return(\n        <>\n        <p>Initial Deck</p>\n        {shuffleCards()}\n        </>\n    );\n};\n\nexport default InitialDeck;"]},"metadata":{},"sourceType":"module"}