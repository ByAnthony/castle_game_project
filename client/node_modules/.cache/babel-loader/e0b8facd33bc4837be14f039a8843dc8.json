{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Player1Hand from './Player1Hand';\nimport Player1Materials from './Player1Materials';\nimport Player1Tools from './Player1Tools';\nimport Deck from './Deck';\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = ({\n  firstPlayerHand,\n  firstComputerHand,\n  deckAfterDealing\n}) => {\n  _s();\n\n  const [updatedDeck, setUpdatedDeck] = useState([]);\n  const [player1Hand, setPlayer1Hand] = useState([]);\n  const [player2Hand, setPlayer2Hand] = useState([]);\n  const [player1Materials, setPlayer1Materials] = useState([]);\n  const [player2Materials, setPlayer2Materials] = useState([]);\n  const [player1Tools, setPlayer1Tools] = useState([]);\n  const [player2Tools, setPlayer2Tools] = useState([]);\n\n  const onMaterialCardClick = function (card) {\n    if (!player1Materials.includes(card)) {\n      const copiedPlayer1Materials = [...player1Materials, card];\n      setPlayer1Materials(copiedPlayer1Materials);\n      removeCardFromPlayer(card);\n    }\n  };\n\n  const onToolCardClick = function (card) {\n    const copiedPlayer1Tools = [...player1Tools, card];\n    setPlayer1Tools(copiedPlayer1Tools);\n    removeCardFromPlayer(card);\n  };\n\n  const removeCardFromPlayer = function (card) {\n    const index = player1Hand.indexOf(card);\n    const copiedPlayer1Hand = [...player1Hand];\n    copiedPlayer1Hand.splice(index, 1);\n    setPlayer1Hand(copiedPlayer1Hand);\n  };\n\n  useEffect(() => {\n    setPlayer1Hand(deckAfterDealing);\n  }, [deckAfterDealing]);\n  useEffect(() => {\n    setPlayer1Hand(firstPlayerHand);\n  }, [firstPlayerHand]);\n  useEffect(() => {\n    setPlayer2Hand(firstComputerHand);\n  }, [firstComputerHand]); // const playerCards = firstPlayerHand(allCards).map((card) => {\n  //     return(\n  //         <li className=\"player-card\" key={card._id}><img src={card.img} alt={card.name}/><button type=\"play\">Play</button><button type=\"discard\">Discard</button></li>\n  //     )\n  // });\n  // const computerCards = firstComputerHand(allCards).map((card) => {\n  //     return(\n  //         <li className=\"computer-card\" key={card._id}><img src={card.img} alt={card.name}/></li>\n  //     )\n  // });\n  // const cardsDeck = deckAfterDealing(allCards).map((card) => {\n  //     return(\n  //         <li className=\"deck-card\" key={card._id}><img src={\"./images/back_image/castle.png\"} alt={card.name}/></li>\n  //     )\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dealing-deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is computer hand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"computer-hand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"computer-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"computer-material\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Material cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"computer-tools\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Tool cards\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"player-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-material\",\n            children: /*#__PURE__*/_jsxDEV(Player1Materials, {\n              player1Materials: player1Materials\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-tools\",\n            children: /*#__PURE__*/_jsxDEV(Player1Tools, {\n              player1Tools: player1Tools\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is your hand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Player1Hand, {\n          className: \"player-hand\",\n          player1Hand: player1Hand,\n          onMaterialCardClick: onMaterialCardClick,\n          onToolCardClick: onToolCardClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discard\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the discard deck\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"mjYVg3g/5M8YYDVYlnCWarDKHUg=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/Game.js"],"names":["React","useState","useEffect","Player1Hand","Player1Materials","Player1Tools","Deck","Game","firstPlayerHand","firstComputerHand","deckAfterDealing","updatedDeck","setUpdatedDeck","player1Hand","setPlayer1Hand","player2Hand","setPlayer2Hand","player1Materials","setPlayer1Materials","player2Materials","setPlayer2Materials","player1Tools","setPlayer1Tools","player2Tools","setPlayer2Tools","onMaterialCardClick","card","includes","copiedPlayer1Materials","removeCardFromPlayer","onToolCardClick","copiedPlayer1Tools","index","indexOf","copiedPlayer1Hand","splice"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Player1Hand from './Player1Hand';\nimport Player1Materials from './Player1Materials';\nimport Player1Tools from './Player1Tools';\nimport Deck from './Deck';\nimport './game.css';\n\nconst Game = ({firstPlayerHand, firstComputerHand, deckAfterDealing}) => {\n\n    const [updatedDeck, setUpdatedDeck] = useState([]);    \n    const [player1Hand, setPlayer1Hand] = useState([]); \n    const [player2Hand, setPlayer2Hand] = useState([]);\n\n    const [player1Materials, setPlayer1Materials] = useState([]);\n    const [player2Materials, setPlayer2Materials] = useState([]);\n    const [player1Tools, setPlayer1Tools] = useState([]);\n    const [player2Tools, setPlayer2Tools] = useState([]);\n    \n\n    const onMaterialCardClick = function(card){\n        if(!player1Materials.includes(card)){\n            const copiedPlayer1Materials = [...player1Materials, card];\n            setPlayer1Materials(copiedPlayer1Materials);\n            removeCardFromPlayer(card)\n        }\n    };\n\n    const onToolCardClick = function(card){\n            const copiedPlayer1Tools = [...player1Tools, card];\n            setPlayer1Tools(copiedPlayer1Tools);\n            removeCardFromPlayer(card)\n    };\n\n    const removeCardFromPlayer = function(card){\n        const index = player1Hand.indexOf(card)\n        const copiedPlayer1Hand = [...player1Hand];\n        copiedPlayer1Hand.splice(index, 1)\n        setPlayer1Hand(copiedPlayer1Hand); \n    }\n\n    useEffect(() => {\n        setPlayer1Hand(deckAfterDealing)\n    }, [deckAfterDealing]);\n\n    useEffect(() => {\n        setPlayer1Hand(firstPlayerHand)\n    }, [firstPlayerHand]);\n\n    useEffect(() => {\n        setPlayer2Hand(firstComputerHand)\n    }, [firstComputerHand])\n    // const playerCards = firstPlayerHand(allCards).map((card) => {\n    //     return(\n    //         <li className=\"player-card\" key={card._id}><img src={card.img} alt={card.name}/><button type=\"play\">Play</button><button type=\"discard\">Discard</button></li>\n    //     )\n    // });\n\n    // const computerCards = firstComputerHand(allCards).map((card) => {\n    //     return(\n    //         <li className=\"computer-card\" key={card._id}><img src={card.img} alt={card.name}/></li>\n    //     )\n    // });\n\n    // const cardsDeck = deckAfterDealing(allCards).map((card) => {\n    //     return(\n    //         <li className=\"deck-card\" key={card._id}><img src={\"./images/back_image/castle.png\"} alt={card.name}/></li>\n    //     )\n    // });\n\n    return(\n        <div id=\"grid-container\">\n            <div className=\"deck\">\n                <p>This is the deck</p>\n                    <ul className=\"dealing-deck\">\n                        {/* {cardsDeck} */}\n                    </ul>\n            </div>\n            <div className=\"game\">\n                <div>\n                    <p>This is computer hand</p>\n                        <ul className=\"computer-hand\">\n                            {/* {computerCards} */}\n                        </ul>\n                    <div id=\"computer-table\">\n                        <div className=\"computer-material\">\n                            <p>Material cards</p>\n                        </div>\n                        <div className=\"computer-tools\">\n                            <p>Tool cards</p>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div id=\"player-table\">\n                        <div className=\"player-material\">\n                            <Player1Materials player1Materials={player1Materials}/>\n                        </div>\n                        <div className=\"player-tools\">\n                            <Player1Tools player1Tools={player1Tools}/>\n                        </div>\n                    </div>\n                    <p>This is your hand</p>\n                        <Player1Hand className=\"player-hand\" player1Hand={player1Hand} onMaterialCardClick={onMaterialCardClick} onToolCardClick={onToolCardClick}/>\n                </div>\n            </div>\n            <div className=\"discard\">\n                <p>This is the discard deck</p>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}