{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/InitialDeck.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InitialDeck = ({\n  allCards,\n  randomDeck\n}) => {\n  const initDeck = () => {\n    let randomDeck = [];\n\n    while (allCards.length !== 0) {\n      let randomIndex = Math.floor(Math.random() * allCards.length);\n      randomDeck.push(allCards[randomIndex]);\n      allCards.splice(randomIndex, 1);\n    }\n\n    allCards = randomDeck;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Initial Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), initDeck]\n  }, void 0, true);\n};\n\n_c = InitialDeck;\nexport default InitialDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"InitialDeck\");","map":{"version":3,"sources":["/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/InitialDeck.js"],"names":["React","InitialDeck","allCards","randomDeck","initDeck","length","randomIndex","Math","floor","random","push","splice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AAE5C,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAID,UAAU,GAAG,EAAjB;;AACA,WAAMD,QAAQ,CAACG,MAAT,KAAoB,CAA1B,EAA4B;AACxB,UAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,QAAQ,CAACG,MAApC,CAAlB;AACAF,MAAAA,UAAU,CAACO,IAAX,CAAgBR,QAAQ,CAACI,WAAD,CAAxB;AACAJ,MAAAA,QAAQ,CAACS,MAAT,CAAgBL,WAAhB,EAA6B,CAA7B;AACH;;AACDJ,IAAAA,QAAQ,GAAGC,UAAX;AACH,GARD;;AAUA,sBACI;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAECC,QAFD;AAAA,kBADJ;AAMH,CAlBD;;KAAMH,W;AAoBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nconst InitialDeck = ({allCards, randomDeck}) => {\n    \n    const initDeck = () => {\n        let randomDeck = [];\n        while(allCards.length !== 0){\n            let randomIndex = Math.floor(Math.random() * allCards.length);\n            randomDeck.push(allCards[randomIndex]);\n            allCards.splice(randomIndex, 1);\n        }\n        allCards = randomDeck;\n    }\n\n    return(\n        <>\n        <p>Initial Deck</p>\n        {initDeck}\n        </>\n    );\n};\n\nexport default InitialDeck;"]},"metadata":{},"sourceType":"module"}